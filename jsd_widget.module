<?php

/**
 * Implements hook_block_info().
 */
function jsd_widget_block_info() {
  $blocks = array();
  $blocks['jsd_widget'] = array(
    'info' => t('My Custom Block'),
  );
  
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function jsd_widget_block_configure($delta='') {
  $form = array();
  
  switch($delta) {
    case 'jsd_widget' :
      // Text field form element
      $form['text'] = array(
        '#type' => 'text_format',
        '#title' => t('Data Key'),
        '#default_value' => variable_get('text_variable', ''),
      );

      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function jsd_widget_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'jsd_widget' :
      // Saving the text value.     
      variable_set('text_variable', $edit['text']['value']);

      break;
  }
}

/**
 * Implements hook_block_view().
 */
function custom_block_block_view($delta='') {
  $block = array();
  
  switch($delta) {
    case 'jsd_widget' :
      $block['content'] = my_block_view();
      break;
  }
  
  return $block;
}

/**
 * Custom function to assemble renderable array for block content.
 * Returns a renderable array with the block content.
 * @return
 *   returns a renderable array of block content.
 */
function jsd_widget_view() {
  $block = array();

  // Capture WYSIWYG text from the variable
  $text = variable_get('text_variable', '');

  // Block output in HTML with div wrapper
  $block = array(
    ‘message’ => array(
      ‘#type’ => ‘markup’,
      ‘#markup’ => $text,
      ‘#suffix’ => ‘‘,
    ),
  );
  return $block;
}
